// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TestApi.Data;

#nullable disable

namespace TestApi.Migrations
{
    [DbContext(typeof(ApiContext))]
    [Migration("20230330135946_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EmpresaFornecedor", b =>
                {
                    b.Property<int>("EmpresasEmpresaId")
                        .HasColumnType("integer");

                    b.Property<int>("FornecedoresFornecedorId")
                        .HasColumnType("integer");

                    b.HasKey("EmpresasEmpresaId", "FornecedoresFornecedorId");

                    b.HasIndex("FornecedoresFornecedorId");

                    b.ToTable("EmpresaFornecedor", (string)null);
                });

            modelBuilder.Entity("TestApi.Models.Empresa", b =>
                {
                    b.Property<int>("EmpresaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("EmpresaId"));

                    b.Property<string>("CEP")
                        .HasColumnType("text");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("character varying(18)");

                    b.Property<string>("NomeFantasia")
                        .HasColumnType("text");

                    b.HasKey("EmpresaId");

                    b.HasIndex("CNPJ")
                        .IsUnique();

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("TestApi.Models.Fornecedor", b =>
                {
                    b.Property<int>("FornecedorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("FornecedorId"));

                    b.Property<string>("CEP")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("TipoFornecedor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("FornecedorId");

                    b.ToTable("Fornecedores");

                    b.HasDiscriminator<string>("TipoFornecedor").HasValue("Fornecedor");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("TestApi.Models.Empresarial", b =>
                {
                    b.HasBaseType("TestApi.Models.Fornecedor");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("character varying(18)");

                    b.HasIndex("CNPJ")
                        .IsUnique();

                    b.HasDiscriminator().HasValue("Empresarial");
                });

            modelBuilder.Entity("TestApi.Models.PessoaFisica", b =>
                {
                    b.HasBaseType("TestApi.Models.Fornecedor");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RG")
                        .HasColumnType("text");

                    b.HasIndex("CPF")
                        .IsUnique();

                    b.HasIndex("RG")
                        .IsUnique();

                    b.HasDiscriminator().HasValue("PessoaFisica");
                });

            modelBuilder.Entity("EmpresaFornecedor", b =>
                {
                    b.HasOne("TestApi.Models.Empresa", null)
                        .WithMany()
                        .HasForeignKey("EmpresasEmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TestApi.Models.Fornecedor", null)
                        .WithMany()
                        .HasForeignKey("FornecedoresFornecedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
